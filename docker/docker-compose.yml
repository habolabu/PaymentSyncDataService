version: "1.0"

volumes:
  payment_sync_data:
  payment_sync_gradle_data:

networks:
  query_database_net:
    external: true
  rabbitmq_net:
    external: true

services:
  payment_sync_service:
    container_name: "payment-sync-service"
    build:
      dockerfile: ./docker/Dockerfile
      context: ..
    ports:
      - ${PAYMENT_SYNC_HOST_PORT}:${PAYMENT_SYNC_CONTAINER_PORT}
    volumes:
      - payment_sync_data:${PAYMENT_SYNC_SERVICE_VOLUMES}
      - payment_sync_gradle_data:${PAYMENT_SYNC_GRADLE_VOLUMES}
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - query_database_net
      - rabbitmq_net
    environment:
      SERVER_PORT: ${SERVER_PORT}
      APPLICATION_NAME: ${APPLICATION_NAME}
      MONGODB_URI: ${MONGODB_URI}
      MONGODB_DATABASE: ${MONGODB_DATABASE}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_VIRTUAL_HOST: ${RABBITMQ_VIRTUAL_HOST}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_IGNORE_DECLARATION_EXCEPTION: ${RABBITMQ_IGNORE_DECLARATION_EXCEPTION}
      RABBITMQ_CONCURRENT_CONSUMERS: ${RABBITMQ_CONCURRENT_CONSUMERS}
      RABBITMQ_MAX_CONCURRENT_CONSUMERS: ${RABBITMQ_MAX_CONCURRENT_CONSUMERS}
      RABBITMQ_RECEIVE_TIMEOUT: ${RABBITMQ_RECEIVE_TIMEOUT}
